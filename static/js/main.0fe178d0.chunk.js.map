{"version":3,"sources":["components/LeitnerTimeLineNumber.jsx","components/LeitnerTimeLineBullet.jsx","components/LeitnerTimeLineBullets.jsx","components/LeitnerTimeLine.jsx","components/LeitnerTimeLineDayIndicatorSq.jsx","components/LeitnerTimeLineDayIndicator.jsx","components/LeitnerTimeLineButton.jsx","views/LeitnerBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["LeitnerTimeLineNumber","tlNumber","leitnerDay","style","backgroundColor","width","height","alignSelf","display","border","borderRadius","boxSizing","fontSize","justifySelf","LeitnerTimeLineBullet","bgColor","LeitnerTimeLineBullets","bulletColor","interval","LeitnerTimeLine","bulletCollors","intervals","margin","gridTemplateColumns","gridTemplateRows","arr","index","push","timeLineNumbers","bullets","i","bulletsArr","renderTimeLineBullets","LeitnerTimeLineDayIndicatorSq","selected","borderLeft","borderRight","borderBottom","LeitnerTimeLineDayIndicator","indicatorLine","indicator","LeitnerTimeLineButton","pressedMe","buttonTxt","isDisabled","onClick","MozUserSelect","WebkitUserSelect","MsUserSelect","unselectable","color","LeitnerBox","currentTodayDate","Date","todayDay","getDate","todayMonth","getMonth","mDat","JSON","parse","localStorage","getItem","setItem","stringify","name","currentDay","currentMonth","studyStarted","useState","setLeitnerDay","marginTop","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fe178d0.chunk.js","sourcesContent":["import React from \"react\";\n\nconst LeitnerTimeLineNumber = ({ tlNumber, leitnerDay }) => {\n  return (\n    <div\n      style={{\n        backgroundColor: leitnerDay ? \"white\" : null,\n        width: \"96%\",\n        height: \"96%\",\n        alignSelf: \"center\",\n        display: \"grid\",\n        border: leitnerDay ? \"solid black 1px\" : null,\n        borderRadius: \"40%\",\n        boxSizing: \"border-box\"\n      }}\n    >\n      <h1\n        style={{ fontSize: \"11px\", justifySelf: \"center\", alignSelf: \"center\" }}\n      >\n        {tlNumber}\n      </h1>\n    </div>\n  );\n};\n\nexport default LeitnerTimeLineNumber;\n","import React from \"react\";\n\nconst LeitnerTimeLineBullet = ({ bgColor }) => {\n  return (\n    <div\n      style={{\n        backgroundColor: bgColor,\n        width: \"40%\",\n        height: \"40%\",\n        borderRadius: \"50%\",\n        alignSelf: \"center\",\n        justifySelf: \"center\",\n      }}\n    ></div>\n  );\n};\n\nexport default LeitnerTimeLineBullet;\n","import React from \"react\";\n\nimport LeitnerTimeLineBullet from \"./LeitnerTimeLineBullet\";\n\nconst LeitnerTimeLineBullets = ({ bulletColor, interval }) => {\n  return (\n    <div style={{ display: \"grid\" }}>\n      <LeitnerTimeLineBullet bgColor={interval ? bulletColor : null} />\n    </div>\n  );\n};\n\nexport default LeitnerTimeLineBullets;\n","import React from \"react\";\n\nimport LeitnerTimeLineNumber from \"./LeitnerTimeLineNumber\";\nimport LeitnerTimeLineBullets from \"./LeitnerTimeLineBullets\";\n\nconst LeitnerTimeLine = ({ leitnerDay }) => {\n  const timeLineNumbers = () => {\n    let arr = [];\n\n    for (let index = 0; index < 64; index++) {\n      arr.push(\n        <LeitnerTimeLineNumber\n          key={index}\n          tlNumber={index + 1}\n          leitnerDay={leitnerDay === index + 1 ? true : false}\n        />\n      );\n    }\n\n    return arr;\n  };\n\n  const bulletCollors = [\n    \"pink\",\n    \"blue\",\n    \"green\",\n    \"black\",\n    \"yellow\",\n    \"purple\",\n    \"orange\",\n  ];\n\n  const intervals = {\n    1: 1,\n    2: 2,\n    3: 4,\n    4: 8,\n    5: 16,\n    6: 32,\n    7: 64,\n  };\n\n  const renderTimeLineBullets = () => {\n    let bullets = [];\n\n    for (let i = 1; i < 8; i++) {\n      let bulletsArr = [];\n      for (let index = 1; index < 65; index++) {\n        bulletsArr.push(\n          <LeitnerTimeLineBullets\n            key={index}\n            bulletColor={bulletCollors[i - 1]}\n            interval={index % intervals[i] === 0 ? true : false}\n          />\n        );\n      }\n      bullets.push(bulletsArr);\n    }\n    return bullets;\n  };\n\n  return (\n    <div\n      style={{\n        backgroundColor: \"grey\",\n        width: \"96%\",\n        height: \"140px\",\n        display: \"grid\",\n        margin: \"0 auto\",\n        borderRadius: \"5px\",\n        gridTemplateColumns: \"repeat(64, 1fr)\",\n        gridTemplateRows: \"repeat(8, 1fr)\",\n      }}\n    >\n      {timeLineNumbers()}\n\n      {renderTimeLineBullets()}\n    </div>\n  );\n};\n\nexport default LeitnerTimeLine;\n","import React from \"react\";\n\nconst LeitnerTimeLineDayIndicatorSq = ({ selected }) => {\n  return (\n    <div\n      style={{\n        //backgroundColor: \"green\",\n        width: \"90%\",\n        height: \"90%\",\n        alignSelf: \"center\",\n        justifySelf: \"center\",\n        display: \"grid\",\n      }}\n    >\n      {selected ? (\n        <div\n          style={{\n            //backgroundColor: \"red\",\n            width: \"0\",\n            height: \"0\",\n            borderLeft: \"8px solid transparent\",\n            borderRight: \"8px solid transparent\",\n            borderBottom:\"16px solid red\",\n            alignSelf: \"center\",\n            justifySelf: \"center\",\n          }}\n        ></div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default LeitnerTimeLineDayIndicatorSq;\n","import React from \"react\";\nimport LeitnerTimeLineDayIndicatorSq from \"./LeitnerTimeLineDayIndicatorSq\";\n\nconst LeitnerTimeLineDayIndicator = ({ leitnerDay }) => {\n  const indicator = () => {\n    let indicatorLine = [];\n    for (let i = 0; i < 64; i++) {\n      indicatorLine.push(\n        <LeitnerTimeLineDayIndicatorSq\n          key={i}\n          selected={leitnerDay === i + 1 ? true : false}\n        />\n      );\n    }\n    return indicatorLine;\n  };\n\n  return (\n    <div\n      style={{\n        backgroundColor: \"lightGray\",\n        width: \"96%\",\n        height: \"40px\",\n        display: \"grid\",\n        margin: \"0 auto\",\n        //borderRadius: \"5px\",\n        gridTemplateColumns: \"repeat(64, 1fr)\",\n        gridTemplateRows: \"repeat(1, 1fr)\",\n      }}\n    >\n      {indicator()}\n    </div>\n  );\n};\n\nexport default LeitnerTimeLineDayIndicator;\n","import React from \"react\";\n\nconst LeitnerTimeLineButton = ({ pressedMe, buttonTxt, isDisabled }) => {\n  return (\n    <div\n      onClick={isDisabled ? null : pressedMe}\n      style={{\n        width: \"120px\",\n        height: \"50px\",\n        backgroundColor: isDisabled ? \"lightGrey\" : \"beige\",\n        display: \"grid\",\n        margin: \"20px\",\n        MozUserSelect: \"none\",\n        WebkitUserSelect: \"none\",\n        MsUserSelect: \"none\",\n        unselectable: \"on\"\n      }}\n    >\n      <h1 style={{ alignSelf: \"center\", justifySelf: \"center\" , color: isDisabled ? \"grey\" : \"black\", }}>\n        {buttonTxt}\n      </h1>\n    </div>\n  );\n};\n\nexport default LeitnerTimeLineButton;\n\n\n\n// <div \n//  style=\"-moz-user-select: none; -webkit-user-select: none; -ms-user-select:none; user-select:none;-o-user-select:none;\" \n//  unselectable=\"on\"\n//  onselectstart=\"return false;\" \n//  onmousedown=\"return false;\">\n//     Blabla\n// </div>","import React, { useState, useEffect } from \"react\";\n\nimport LeitnerTimeLine from \"../components/LeitnerTimeLine\";\nimport LeitnerTimeLineDayIndicator from \"../components/LeitnerTimeLineDayIndicator\";\nimport LeitnerTimeLineButton from \"../components/LeitnerTimeLineButton\";\n\nconst LeitnerBox = () => {\n  const currentTodayDate = new Date();\n  const todayDay = currentTodayDate.getDate();\n  const todayMonth = currentTodayDate.getMonth();\n\n  // compare date with the saved one,\n\n  // localStorage.setItem(\n  //   \"mdat\",\n  //   JSON.stringify({\n  //     name: \"mig\",\n  //     leitnerDay: 1,\n  //     currentDay: 1,\n  //     currentMonth: 1,\n  //     studyStarted: false\n  //   })\n  // );\n\n  const mDat = JSON.parse(localStorage.getItem(\"mdat\"));\n\n  if (mDat) {\n    if (todayMonth === mDat[\"currentMonth\"]) {\n      if(todayDay === mDat[\"currentDay\"]){\n        //console.log(\"got here\")\n        //disable button here\n\n\n\n\n      } else {\n        // button status : Able -  button pressed moves leitnerDay to next day and save in localStorage\n\n\n\n      }\n    } else {\n\n      // if studyStarted === false\n      // start study\n      // else \n      // move to next day and save new leitnerDay\n\n\n\n      // save new date in local storage\n      \n      localStorage.setItem(\n        \"mdat\",\n        JSON.stringify({\n          name: \"mig\",\n          leitnerDay: 1,\n          currentDay: todayDay,\n          currentMonth: todayMonth,\n          studyStarted: false\n        })\n      );\n  \n    }\n  } else {\n    localStorage.setItem(\n      \"mdat\",\n      JSON.stringify({\n        name: \"mig\",\n        leitnerDay: 1,\n        currentDay: todayDay,\n        currentMonth: todayMonth,\n        studyStarted: false\n      })\n    );\n  }\n  \n\n\n  const [leitnerDay, setLeitnerDay] = useState(mDat[\"leitnerDay\"]);\n\n  const pressedMe = () => {\n    setLeitnerDay(leitnerDay > 63 ? 1 : leitnerDay + 1);\n\n    localStorage.setItem(\n      \"mdat\",\n      JSON.stringify({\n        name: \"mig\",\n        leitnerDay: leitnerDay + 1,\n        currentDay: todayDay,\n        currentMonth: todayMonth,\n        studyStarted: false\n      })\n    );\n  };\n\n  return (\n    <div style={{ marginTop: \"40px\" }}>\n      <LeitnerTimeLine leitnerDay={leitnerDay} />\n      <LeitnerTimeLineDayIndicator leitnerDay={leitnerDay} />\n      <LeitnerTimeLineButton pressedMe={pressedMe} isDisabled={false} buttonTxt={\"Study\"}/>\n    </div>\n  );\n};\n\nexport default LeitnerBox;\n","// import \"./App.css\";\nimport \"./reset.css\";\nimport \"./css/activityBar.css\"\n\n\n// import ActivityBar from \"./components/ActivityBar\";\n// import PlayerName from \"./components/PlayerName\";\n// import BodyTemp from \"./views/BodyTemp\";\nimport LeitnerBox from \"./views/LeitnerBox\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <div>\n        <ActivityBar />\n      </div>\n\n      <PlayerName />\n      <BodyTemp /> */}\n\n      <LeitnerBox />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}